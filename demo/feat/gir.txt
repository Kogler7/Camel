FUNC<add> atomic (sig1, sig2) {
    [DREF<sig1>, 0] -> DREF<__index__> -> NREF<0>
    [DREF<sig2>, 0] -> DREF<__index__> -> NREF<1>
    [DREF<0>, DREF<1>] -> DREF<__add__> -> NREF<4>
    [DREF<2>, DREF<3>] -> DREF<__add__> -> NREF<5>
    [DREF<4>, DREF<5>] -> DREF<__cast__> -> RETN
}
FUNC<comp1> inner (signal) {}
FUNC<comp2> inner (signal) {}
FUNC<comp3> inner (signal) {}
FUNC<analyzer1> inner (signal) {}
FUNC<analyzer2> inner (signal) {}
FUNC<process> (signals) {
    [DREF<signals>, 0] -> DREF<__index__> -> DREF<comp1> -> DREF<comp2> -> DREF<__copy__> -> NREF<res1>
    [DREF<res1>, 0] -> DREF<__index__> -> NREF<analyzer1>
    [DREF<signals>, 1] -> DREF<__index__> -> DREF<comp3> -> DREF<__copy__> -> NREF<res2>
    [DREF<res1>, 1] -> DREF<__index__> -> NREF<7>
    [DREF<7>, DREF<res2>] -> DREF<add> -> DREF<analyzer2>
}
[[1, 2], NULL] -> DREF<__cast__> -> DREF<__copy__> -> NREF<signal1>
[[3, 4], NULL] -> DREF<__cast__> -> DREF<__copy__> -> NREF<signal2>
[DREF<signal1>, DREF<signal2>] -> DREF<process> -> DREF<print>